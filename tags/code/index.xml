<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Code - 标签 - Mazikai's Blog</title><link>https://mazikai002.github.io/tags/code/</link><description>Code - 标签 - Mazikai's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>mazikai002@gmail.com (mazikai002)</managingEditor><webMaster>mazikai002@gmail.com (mazikai002)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><atom:link href="https://mazikai002.github.io/tags/code/" rel="self" type="application/rss+xml"/><item><title>算法刷题 —— 判断图中是否有环(Leetcode 207)</title><link>https://mazikai002.github.io/code_graph_without_ring/</link><pubDate>Fri, 15 Mar 2024 11:27:33 +0800</pubDate><author>mazikai</author><guid>https://mazikai002.github.io/code_graph_without_ring/</guid><description>判断图中是否有环 ~ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 package main func main() { } type Graph struct { grips []grip } type grip struct { inDegree int pointTo []grip</description></item><item><title>算法刷题 —— 最长递增子序列(Leetcode 300)</title><link>https://mazikai002.github.io/code_the_longest_increasing_subsequence/</link><pubDate>Wed, 13 Mar 2024 16:50:00 +0800</pubDate><author>mazikai</author><guid>https://mazikai002.github.io/code_the_longest_increasing_subsequence/</guid><description>最长递增子序列 ~ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main func main() { } // O(n2) func lengthOfLIS(nums []int) int { res := math.MinInt dp := make([]int,len(nums)) for i := 0 ; i &amp;lt; len(nums) ; i++ { dp[i] = 1 } for i :=</description></item><item><title>算法刷题 —— 判断 nums 中是否存在某个子序列之和等于 k</title><link>https://mazikai002.github.io/code_sum_judged_be_k/</link><pubDate>Tue, 06 Feb 2024 19:50:00 +0800</pubDate><author>mazikai</author><guid>https://mazikai002.github.io/code_sum_judged_be_k/</guid><description>判断 nums 中是否存在某个子序列之和等于 k ~ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 func main() { a := []int{4, 1, 2, 4, 7} res := IsContainNumTotalK(a, 20) fmt.Println(res) } func IsContainNumTotalK(nums []int, k int) bool { if k == 0 { return true } else</description></item></channel></rss>